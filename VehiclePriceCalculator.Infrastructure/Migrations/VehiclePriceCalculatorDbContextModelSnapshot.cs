// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehiclePriceCalculator.Infrastructure.Data;

#nullable disable

namespace VehiclePriceCalculator.Infrastructure.Migrations
{
    [DbContext(typeof(VehiclePriceCalculatorDbContext))]
    partial class VehiclePriceCalculatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehiclePriceCalculator.Domain.Entities.VehiclePriceTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AssociationFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BasicFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SpecialFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StorageFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VehiclePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("VehiclePriceTransaction");
                });

            modelBuilder.Entity("VehiclePriceCalculator.Domain.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VehicleTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VehicleType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 4, 18, 19, 41, 38, 356, DateTimeKind.Local).AddTicks(9335),
                            DateModified = new DateTime(2024, 4, 18, 19, 41, 38, 356, DateTimeKind.Local).AddTicks(9401),
                            ModifiedBy = "System",
                            VehicleTypeName = "Common"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 4, 18, 19, 41, 38, 356, DateTimeKind.Local).AddTicks(9418),
                            DateModified = new DateTime(2024, 4, 18, 19, 41, 38, 356, DateTimeKind.Local).AddTicks(9431),
                            ModifiedBy = "System",
                            VehicleTypeName = "Luxury"
                        });
                });

            modelBuilder.Entity("VehiclePriceCalculator.Domain.Entities.VehiclePriceTransaction", b =>
                {
                    b.HasOne("VehiclePriceCalculator.Domain.Entities.VehicleType", "VehicleType")
                        .WithOne("VehicleTransaction")
                        .HasForeignKey("VehiclePriceCalculator.Domain.Entities.VehiclePriceTransaction", "VehicleTypeId");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("VehiclePriceCalculator.Domain.Entities.VehicleType", b =>
                {
                    b.Navigation("VehicleTransaction")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
